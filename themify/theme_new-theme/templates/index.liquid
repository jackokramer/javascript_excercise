{{ content_for_index }}

{% for product in collections.frontpage.products limit:4 %}
  <div>
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
    {{ product.price | money }}
    {% unless product.available %}<br><strong>sold out</strong>{% endunless %}
    <a href="{{ product.url | within: collection }}">
      <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
    </a>
  </div>
{% endfor %}

<!--YOu can create a boolean but you can't assign the result of a comparison to a variable-->


<h2>String Concatination</h2>

{%assign firstName = "Jack"%}
{% assign lastName= "Kramer"%}

{% capture full_name %}
{{first_name}}{{last_name}}
{% endcapture %}

Full name: {{full_name}}

<!--Substrings-->
<h2>String Concatination</h2>

{%assign youtube_video_url="https://www.youtube.com/watch?v=Emulp255uP8"%}
	{%if youtube_video_url contains 'youtube.com/watch' %}
  {% assign video_id = youtube_video_url | split 'v=' %}
    {% if youtube_video_url contains '&'%}
        {%assign video_id = video_id[1] | split: '&' | first%}
    {% else %}
        {% assign video_id = video_id[1]%}
    {% endif %}
    <iframe src="//www.youtube.com/embed/{{ video_id }}">
{% endif %}

<!-- Creating an array of Objects-->
<!---
Shopify liquid does not allow for making objects, neither can you create an array of objects. You can however make arrays of strings and numbers as well as arrays of stromh arrays using capture.
----->

<h2>Array of 'Objects'</h2>
{% assign collection = collections['featured-collection']%}
{% assign collection2 = collections['example-collection']%}

{% assign collection_array = colllection.collection2%}

{% capture product_list %}
  {% for product in collection.products%}
  {{product.title}}|{{product.url}}|{{product.description}}|{{product.featured_img.src| product_img_url: 'medium'}}
  {% if forloop.last == fasle%}::{{% endif %}}
  {% endif %}
  {%endfor%}
{% endcapture %}

  {% assign products_array = products_list | split: '::' %}
  {% for product in products_array %}
    {% assign product_vals = product | split: '|' %}
      {{product_vals[0]}}
      {{product_vals[2]}}
  {% endfor %}

  {% assign itemsArray = "item1#item2" | split: '#' %}
  {% assign colorsArray = "blue#green" | split: '#' %}

  {%- for item in itemsArray-%}
  {%- if item == "item1"-%}
    {{ colorsArray [forloop.index0] }}
    {%- endif -%}
  {%- endfor -%}

 
  <!--Creating booleans-->

  {%assign true_false = false %}
{% if "hello" == "hello"%}
      {% assign true_false = true%}
   {% endif %}
  {% if true_false%}
   hello does equal hello
   {% else %}
    hello does not equal
  {% endif %}

<!--Order of operations-->
{%assign average_price = 50 | plus: 20 | plus: 30 | divided_by: 3%}
{{average_price}}

<!-- Price of a shirt  2 times 15 -->

{% assign price = 8 | times: 2 | plus: 10 | minus: 5 | divided_by:2 %}
{{cost}}
<br>
{% assign cost_of_shirts = 0 | times: 2%}
{% assign cost_of_shorts = 20 | minus: 2 | times: 2%}
{% assign const = cost_of_shirts | plus:  cost_of_shorts |%}
{{cost}}

<!--Empty drops-->
{% assign page = page['does not exist']%}
<!-- A drop is just an object-->

{{page}}
<br>
{{collection}}

{% if customer %}
<h2>Customer</h2>
{% else %}
<h2>Customer not logged in</h2>
{% endif %}